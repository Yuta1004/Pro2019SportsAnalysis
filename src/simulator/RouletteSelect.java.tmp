package simulator;

import java.util.Random;
import java.util.ArrayList;
import java.util.Collections;

public class RouletteSelect {

    private Random rand;
    private double selectTable[];
    private ArrayList<Double> data;

    /**
     * RouletteSelectのコンストラクタ
     */
    public RouletteSelect(int seed, double[] array) {
        rand = new Random(seed);
        normalization(array);
    }

    /**
     * データの正規化を行う
     *
     * @param data double要素の配列
     */
    @SuppressWarnings("unchecked")
    private void normalization(double array[]) {
        // 全データの合計
        double sum = 0;
        for(int idx = 0; idx < array.length; ++ idx) {
            if(array[idx] >= 0)
                sum += array[idx];
        }

        // data初期化
        data = new ArrayList<Double>();
        for(double val : array) {
            if(val >= 0)
                data.add(val/sum);
        }
        Collections.sort(data);
        Collections.reverse(data);

        // 0 ~ 1.0の範囲で正規化
        double val = 1.0;
        for(int idx = 0; idx < data.size(); ++ idx) {
            val -= data.get(idx);
            data.set(idx, val);
        }
    }

    /**
     * 選択テーブルを初期化する
     */
    private void initSelectTable() {
        // テーブル初期化
        selectTable = new double[1000];

        int dataIdx = 0;
        for(int idx = 0; idx < 1000; ++ idx) {
            int prop = (int)(data.get(dataIdx)*1000);
            selectTable[prop] = 
        }
    }

}